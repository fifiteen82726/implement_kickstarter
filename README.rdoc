==README

===User Story
* 使用者會看到一個頁面可以呈現不同類別最新的集資專案 ->ok
* 使用者可以選擇要看哪一個類別的集資專案 ->ok
* 使用者可以透過 pagination 或是瀑布流的方式瀏覽更多專案 ->pagination
* （加分）使用者可以透過關鍵字進行搜尋 ->ok ransack
* （加分）資料抓下來後都可以實際存在資料庫中，建議使用 postgresql -> ok

===前端
* 使用一個 js framework 去呈現這些集資專案 -> no
* 使用者至少要能知道專案的標題、圖片、集資金額、目標金額、集資進度百分比、贊助人數、集資狀態，並且可以透過 pagination 或是瀑布流瀏覽更多。 ->ok




後端：

* 建立一個可以容錯機制的系統。如果系統壞了，你會怎麼將資料恢復到上個備份點？ ->no

* 怎麼減少更多 API （不論是對網站還是對外部網站）的呼叫？ 
   ->把資料抓進資料庫，Category.project.name 做N+1 Query處理

* 怎麼樣的方式能優化切換不同類別專案顯示時的瀏覽體驗，而不是一直重新讀取網站頁面？
   ->利用 page cache

請針對上述提供之內容設計一個系統，若不會實作也請於 README 中提出對於這些功能的看法。
